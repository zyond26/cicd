@model WebRestaurant.Models.MenuIndexViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Thực đơn";
}

<div class="main-container">
    <div class="menu-container">
        <h2 class="text-center">Thực đơn</h2>

        <!-- Bộ lọc phân loại món ăn -->
        <form method="get" asp-action="Index" class="mb-3">
            <div class="d-flex justify-content-between">
                <div class="form-group">
                    <label for="category" class="form-label">Chọn loại món ăn:</label>
                    <select id="category" name="category" class="form-select" onchange="this.form.submit()">
                        <option value="">Tất cả</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category" selected="@(Model.SelectedCategory == category ? "selected" : null)">
                                @category
                            </option>
                        }
                    </select>
                </div>

                <!-- Bộ lọc sắp xếp theo giá -->
                <div class="form-group">
                    <label for="sortOrder" class="form-label">Sắp xếp theo giá:</label>
                    <select id="sortOrder" name="sortOrder" class="form-select" onchange="this.form.submit()">
                        <option value="" selected> Mặc định </option>
                        <option value="price_asc" selected="@(Model.SortOrder == "price_asc" ? "selected" : null)"> Giá tăng dần </option>
                        <option value="price_desc" selected="@(Model.SortOrder == "price_desc" ? "selected" : null)"> Giá giảm dần </option>
                    </select>
                </div>
            </div>
        </form>

        <!-- Hiển thị danh sách món ăn -->
        <div class="menu-items">
            @foreach (var item in Model.MenuItems)
            {
                <div class="menu-card">
                    @{
                        // Kiểm tra nếu ImageUrl bắt đầu bằng http hoặc https (ảnh từ link mạng)
                        bool isExternalImage = item.ImageUrl.StartsWith("http://") || item.ImageUrl.StartsWith("https://");
                        string imageUrl = isExternalImage ? item.ImageUrl : Url.Content("~/images/" + item.ImageUrl);
                    }

                    <img src="@imageUrl" class="menu-img" alt="@item.Name" />
                    <div class="menu-info">
                        <h5>@item.Name</h5>
                        <p>@item.Description</p>
                        <p><strong>@(item.Price.ToString("N0"))</strong> VND</p>
                        <div class="menu-actions">
                            <a class="btn btn-primary" asp-controller="Menu" asp-action="Details" asp-route-id="@item.Id">Chi tiết</a>
                            <button type="button"
                                    class="btn btn-success open-modal-btn"
                                    data-id="@item.Id"
                                    data-name="@item.Name"
                                    data-price="@item.Price">
                                Thêm vào giỏ hàng
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>


        <!-- Phân trang -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { category = Model.SelectedCategory, sortOrder = Model.SortOrder, page = i })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<!-- Modal thêm vào giỏ hàng -->
<div id="addToCartModal" class="modal-overlay" style="display: none;">
    <div class="modal-content">
        <span id="closeModal" class="close-modal">&times;</span>
        <h4>Thêm vào giỏ</h4>
        <hr />
        <!-- Thông tin món ăn -->
        <div>
            <p><strong>Tên món:</strong> <span id="modalItemName"></span></p>
            <p><strong>Giá:</strong> <span id="modalItemPrice"></span> VND</p>
        </div>
        <!-- Form thêm vào giỏ -->
        <form asp-controller="Cart" asp-action="AddToCart" method="post">
            <input type="hidden" name="menuItemId" id="modalItemId" />
            <div class="form-group">
                <label>Số lượng:</label>
                <input type="number" name="quantity" id="modalQuantity" class="form-control" value="1" min="1" />
            </div>
            <div class="form-group">
                <label>Yêu cầu (note):</label>
                <textarea name="note" class="form-control" placeholder="Ví dụ: Không hành, thêm nước chấm..."></textarea>
            </div>
            <button type="submit" class="btn btn-primary mt-2">Xác nhận</button>
        </form>
    </div>
</div>

<style>
    /* Layout chính của trang */
    html, body {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100vh;
        display: flex;
        flex-direction: column;
        background: url('https://posapp.vn/wp-content/uploads/2018/03/khu-vuc-an-uong.png') no-repeat center center fixed;
        background-size: cover;
    }

    .main-container {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    .menu-container {
        background: rgba(255, 255, 255, 0.9);
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        width: 1000px;
        text-align: center;
    }

    /* Danh sách món ăn */
    .menu-items {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }

    .menu-card {
        background: #fff;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        width: 250px;
        text-align: center;
    }

    .menu-img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 10px;
    }

    .menu-actions {
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin-top: 10px;
    }

    /* Modal overlay */
    .modal-overlay {
        position: fixed;
        top: 0; left: 0;
        width: 100%; height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    /* Nội dung modal */
    .modal-content {
        background: #fff;
        width: 400px;
        padding: 20px;
        border-radius: 10px;
        position: relative;
    }

    /* Nút đóng modal */
    .close-modal {
        position: absolute;
        top: 10px; right: 10px;
        cursor: pointer;
        font-size: 20px;
        font-weight: bold;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .menu-container {
            width: 90%;
        }
        .menu-card {
            width: 100%;
            max-width: 300px;
        }
        .modal-content {
            width: 90%;
        }
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('addToCartModal');
            const closeModalBtn = document.getElementById('closeModal');
            const itemIdInput = document.getElementById('modalItemId');
            const itemNameSpan = document.getElementById('modalItemName');
            const itemPriceSpan = document.getElementById('modalItemPrice');
            const quantityInput = document.getElementById('modalQuantity');

            // Bắt sự kiện click của nút "Thêm vào giỏ hàng"
            document.querySelectorAll('.open-modal-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const id = this.getAttribute('data-id');
                    const name = this.getAttribute('data-name');
                    const price = this.getAttribute('data-price');

                    // Gán dữ liệu cho modal
                    itemIdInput.value = id;
                    itemNameSpan.textContent = name;
                    itemPriceSpan.textContent = price;
                    quantityInput.value = 1;

                    // Hiển thị modal
                    modal.style.display = 'flex';
                });
            });

            // Đóng modal khi click vào nút X
            closeModalBtn.addEventListener('click', function () {
                modal.style.display = 'none';
            });

            // Đóng modal khi click bên ngoài modal-content
            modal.addEventListener('click', function (e) {
                if (e.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });
    </script>
}
